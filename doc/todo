
TODO
====

Figure out where the type information disappears and preserve it for records

Add a new phase for generating Resources from the heap

  Remember, the Resource type only contains literals because it exists in a graph of
  Resources

Add a code-generation phase

Add support for collections (lists, sets, and dictionaries, probably)

  Make sure the available operations don't allow unbounded collections

Add support for infix operators for primitive types

Perhaps a primitive type for file paths would be useful

  But then why not also for uris, IPv4 and v6, MAC addresses, et cetera? Sure.
    
    And hostnames.

Why do we have the declaration structure of the program as a tree, even after the
sort phase? It could just as well be the topo-sorted list of bindings that shows up
in the various Env types.

Fix default values in types - they are supposed to be able to refer to abstract
members of the particular value the default is being used in

  Or just remove the feature for now

Figure out where to put code to check access rules

Make resource names nicer

